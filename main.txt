# import stuff
import discord

# import stuff
import os

# import stuff
import typing
import asyncio
import datetime
# import stuff
from dotenv import load_dotenv
from discord.ext.commands import Bot
from discord.ext import commands
from datetime import datetime


# Load .env file
load_dotenv()

# Grab api token
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
# gets client stuff
bot = discord.Client()
bot = commands.Bot(command_prefix='B.')
bot.uptime = datetime.utcnow()
owner = bot.get_user(bot.owner_id)
bot.owner_id = 690420846774321221
bot.load_extension("jishaku")

# When bot goes online
@bot.event
async def on_ready():
	# server counter
	guild_count = 0

	# gets guild info
	for guild in bot.guilds:
		# prints guild name
		print(f"- {guild.id} (name: {guild.name})")

		# guild counter
		guild_count = guild_count + 1

	# prints amount of servers
	print("SampleDiscordBot is in " + str(guild_count) + " guilds.")
	await bot.change_presence(activity=discord.Activity(type=discord.ActivityType.watching, name="" + str(guild_count) + " servers"))
# listen for new msg
@bot.event
async def on_message(message):
        await bot.process_commands(message)
	# check if msg is hello
        if message.content.lower() == "hello":
	# sends reply
                        await message.channel.send("hey dummy")
        if "fuck" in message.content.lower():
        # sends reply
                        await message.channel.send("LANGUAGE")
                        await message.delete()
        if message.content.lower() == "Shadow Legends":
	# sends reply
                        await message.channel.send("Today's video is sponsored by Raid Shadow Legends, one of the biggest mobile role-playing games of 2019 and it's totally free! Currently almost 10 million users have joined Raid over the last six months, and it's one of the most impressive games in its class with detailed models, environments and smooth 60 frames per second animations! All the champions in the game can be customized with unique gear that changes your strategic buffs and abilities! The dungeon bosses have some ridiculous skills of their own and figuring out the perfect party and strategy to overtake them's a lot of fun! Currently with over 300,000 reviews, Raid has almost a perfect score on the Play Store! The community is growing fast and the highly anticipated new faction wars feature is now live, you might even find my squad out there in the arena! It's easier to start now than ever with rates program for new players you get a new daily login reward for the first 90 days that you play in the game! So what are you waiting for? Go to the video description, click on the special links and you'll get 50,000 silver and a free epic champion as part of the new player program to start your journey! Good luck and I'll see you there!")
        if message.content.startswith('test embed'):
                embedVar = discord.Embed(title="Title", description="Desc", color=0x00ff00)
                embedVar.add_field(name="Field1", value="hi", inline=False)
                embedVar.add_field(name="Field2", value="hi2", inline=False)
                await message.channel.send(embed=embedVar)
@bot.event
async def on_member_join(member):
    await member.send(f'Welcome {member.mention}! ðŸ‘‹.')

# commands


@bot.command()
async def test(ctx):
        """Its a frickin test command jeez"""
        await ctx.send("testing")
        
@bot.command()
@commands.has_permissions(ban_members = True)
async def ban(ctx, members: commands.Greedy[discord.Member],
                   delete_days: typing.Optional[int] = 0, *,
                   reason: str):
    """Mass bans members with an optional delete_days parameter"""
    for member in members:
        await member.ban(delete_message_days=delete_days, reason=reason)
@ban.error
async def ban_error(ctx, error):
    if isinstance(error, commands.BadArgument):
        await ctx.send('HAHA ur bad')
        
@bot.command()
async def userinfo(ctx, *, member: discord.Member):
        """Tells you some info about the member."""
        fmt = '{0} joined on {0.joined_at} and has {1} roles.'
        owner = bot.get_user(bot.owner_id)
        embedVar = discord.Embed(title="User Info", description="@" + fmt.format(member, len(member.roles)-1), color=0xfff300)
        embedVar.set_footer(text=f"Bot made by {Owner}") #if you like to
        
        await ctx.send(embed=embedVar)

@userinfo.error
async def userinfo_error(ctx, error):
    if isinstance(error, commands.BadArgument):
        await ctx.send('I could not find that member...')
async def is_owner(ctx):
    return ctx.author.id == 690420846774321221

@bot.command(name='eval')
@commands.check(is_owner)
async def _eval(ctx, *, code):
    """Only bob gets to use this"""
    await ctx.send(eval(code))

@bot.command()
async def say(ctx, *, arg):
        """Says what you tell it to"""
        await ctx.channel.purge(limit = 1)
        await ctx.send(arg)
    
@bot.command(aliases=['c'])
@commands.has_permissions(manage_messages = True)
async def clear(ctx,amount=2):
        """Clears messages"""
        await ctx.channel.purge(limit = amount + 1)
        await ctx.send("I ate those messages for you! ;)")

@bot.command(aliases=['pong'])
async def ping(ctx):
        """Checks ping(alais=pong)"""
        ping = int(bot.latency * 1000)
        owner = bot.get_user(bot.owner_id)
        embedVar = discord.Embed(title="***PONG!***  :ping_pong:", description="My ping is *" + str(ping) + "ms*", color=0x00ff00)
        embedVar.set_footer(text=f"Bot made by {owner}") #if you like to
        await ctx.send(embed=embedVar)
    
@bot.command()
async def porn(ctx):
        """Use if you are really horny"""
        await ctx.send("Shut up, horny kid.")
        
@bot.command()
async def slap(ctx, members: commands.Greedy[discord.Member], *, reason='no reason'):
        """Use this to slap someone(ping them)"""
        slapped = ", ".join(x.name for x in members)
        owner = bot.get_user(bot.owner_id)
        embedvar = discord.Embed(title="***SLAP***", description='*{}* just got **slapped** for {}'.format(slapped, reason), color=0xff8400) #,color=Hex code
        embedvar.set_footer(text=f"Bot made by {owner}") #if you like to
        await ctx.send(embed=embedvar)

class MemberRoles(commands.MemberConverter):
    async def convert(self, ctx, argument):
        member = await super().convert(ctx, argument)
        return [role.name for role in member.roles[1:]] # Remove everyone role!

@bot.command()
async def roles(ctx, *, member: MemberRoles):
        """Tells you a member's roles."""
        owner = bot.get_user(bot.owner_id)
        embedvar = discord.Embed(title="Roles", description='I see the following roles: ' + ', '.join(member), color=0xfff300) #,color=Hex code
        embedvar.set_footer(text=f"Bot made by {owner}") #if you like to
        await ctx.send(embed=embedvar)

@bot.command()
async def add(ctx, a: int, b: int):
        """I'm a baby bot, so i only do baby math(format= "x y" for x+y=z)"""
        answer = (a + b)
        owner = bot.get_user(bot.owner_id)
        embedvar = discord.Embed(title="Math", description="I think the answer to that is **" + str(answer) + "**", color=0x9400ff) #,color=Hex code
        embedvar.set_footer(text=f"Bot made by {owner}") #if you like to
        await ctx.send(embed=embedvar)

@bot.command()
@commands.is_owner()
async def shutdown(ctx):
        """Shuts the bot down"""
        owner = bot.get_user(bot.owner_id)
        embedvar = discord.Embed(title="*Shutting Down...*", description="Goodbye!", color=0xff0000) #,color=Hex code
        embedvar.set_footer(text="Bot made by BobDotCom#0001") #if you like to
        await ctx.send(embed=embedvar)
        await ctx.bot.logout()
        print("Bot Shut Down")

@bot.command()
async def displayembed(ctx):
        """This is an embed tester"""
        owner = bot.get_user(bot.owner_id)
        embedvar = discord.Embed(title="Title", description="desc", color=0xff0000) #,color=Hex code
        embedvar.add_field(name="subheader", value="desc2", inline=False)
        embedvar.set_footer(text=f"Bot made by {owner}") #if you like to
        await ctx.send(embed=embedvar)

@bot.command()
async def invite(ctx):
        """Invite me to your own server!"""
        owner = bot.get_user(bot.owner_id)
        embedvar = discord.Embed(title="Wow! I'm really that special?", description="Here is my link: https://discord.com/api/oauth2/authorize?client_id=745044803732897802&permissions=8&scope=bot", color=0x00ff00) #,color=Hex code
        embedvar.set_footer(text=f"Bot made by {owner}") #if you like to
        await ctx.send(embed=embedvar)

@bot.command()
async def uptime(ctx):
            """See how long the bot has been up."""
            owner = bot.get_user(bot.owner_id)
            minute,hour,day,second = 0,0,0,0
            time = datetime.utcnow()
            time -= bot.uptime
            second = list(str(time.seconds)).copy()
            second = int("".join(second))
            if second > 60:
                minute =+ second // 60
                second = second % 60
            if minute > 60:
                hour += minute // 60
                minute = minute % 60
            if hour > 24:
                day += hour // 24
                hour = hour % 24
            embedvar = discord.Embed(title="Bot Uptime", description=f"Bot has been online for {day}d {hour}h {minute}m {second}s", color=0x00ff00) #,color=Hex code
            embedvar.set_footer(text=f"Bot made by {owner}") #if you like to
            await ctx.send(embed=embedvar)
        
# token
bot.run(DISCORD_TOKEN)
